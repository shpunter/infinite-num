// deno-lint-ignore-file
import type { Digit, Key } from "./types.ts";

export const getCandidates = (num: Digit, endsWith: Digit) => {
  const map: { [num in Key]: { [endsWith in Key]?: [Digit, Digit][] } } = {
    0: {
      0: [
        [0, 0],
        [1, 0],
        [2, 0],
        [3, 0],
        [4, 0],
        [5, 0],
        [6, 0],
        [7, 0],
        [8, 0],
        [9, 0],
        [0, 0],
      ],
    },
    1: {
      0: [[0, 0]],
      1: [[1, 0]],
      2: [[2, 0]],
      3: [[3, 0]],
      4: [[4, 0]],
      5: [[5, 0]],
      6: [[6, 0]],
      7: [[7, 0]],
      8: [[8, 0]],
      9: [[9, 0]],
    },
    2: {
      0: [[0, 0], [5, 1]],
      2: [[1, 0], [6, 1]],
      4: [[2, 0], [7, 1]],
      6: [[3, 0], [8, 1]],
      8: [[4, 0], [9, 1]],
    },
    3: {
      0: [[0, 0]],
      1: [[7, 2]],
      2: [[4, 1]],
      3: [[1, 0]],
      4: [[8, 2]],
      5: [[5, 1]],
      6: [[2, 0]],
      7: [[9, 2]],
      8: [[6, 1]],
      9: [[3, 0]],
    },
    4: {
      0: [[0, 0], [5, 2]],
      2: [[3, 1], [8, 3]],
      4: [[1, 0], [6, 2]],
      6: [[4, 1], [9, 3]],
      8: [[2, 0], [7, 2]],
    },
    5: {
      0: [[0, 0], [2, 1], [4, 2], [6, 3], [8, 4]],
      5: [[1, 0], [3, 1], [5, 2], [7, 3], [9, 4]],
    },
    6: {
      0: [[0, 0], [5, 3]],
      2: [[2, 1], [7, 4]],
      4: [[4, 2], [9, 5]],
      6: [[1, 0], [6, 3]],
      8: [[3, 1], [8, 4]],
    },
    7: {
      0: [[0, 0]],
      1: [[3, 2]],
      2: [[6, 4]],
      3: [[9, 6]],
      4: [[2, 1]],
      5: [[5, 3]],
      6: [[8, 5]],
      7: [[1, 0]],
      8: [[4, 2]],
      9: [[7, 4]],
    },
    8: {
      0: [[0, 0], [5, 4]],
      2: [[4, 3], [9, 7]],
      4: [[3, 2], [8, 6]],
      6: [[2, 1], [7, 5]],
      8: [[1, 0], [6, 4]],
    },
    9: {
      0: [[0, 0]],
      1: [[9, 8]],
      2: [[8, 7]],
      3: [[7, 6]],
      4: [[6, 5]],
      5: [[5, 4]],
      6: [[4, 3]],
      7: [[3, 2]],
      8: [[2, 1]],
      9: [[1, 0]],
    },
  };

  return map[num][endsWith] ?? null;
};

export const division = (
  left: number[],
  right: number[],
  intLenL: number,
  intLenR: number,
) => {
  return [];
};
